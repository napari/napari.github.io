@import '@/scss/utils';

/**
 * By default, `react-calendar` includes no styling, so we need to provide our
 * own using the Calendar component's CSS classes.
 */

.react-calendar {
  // Make containers fill empty space.
  &,
  &__viewContainer {
    @apply flex flex-1 flex-col;
  }

  &__month-view {
    // Why does react-calendar have nested divs without class names :(
    &,
    & > div,
    & > div > div {
      @apply flex flex-1 flex-col;
    }
  }

  &__month-view__days {
    @apply grid-cols-7 h-full;

    // Override react-calendar display flex styling. The library uses the
    // `style` attribute, so we need to use `!important` to override it.
    display: grid !important;
  }

  // Styles to apply to the month view day tiles.
  &__month-view__days__day {
    @apply flex flex-col space-y-1;

    // Calendar tile component is always a button, since there's currently no
    // way to customize the tile:
    // https://github.com/wojtekmaj/react-calendar/issues/572
    @apply cursor-default;

    // Disable blue highlight when on tapping on webkit mobile devices.
    -webkit-tap-highlight-color: transparent;
    max-width: 100% !important;

    abbr {
      @apply mt-1 ml-1 font-semibold;
    }

    // Styles to apply to day tiles for the active week.
    &.active-week {
      // Show active week day numbers in black box.
      abbr {
        @apply bg-black text-white;
        @apply flex items-center justify-center;
        @apply w-6 h-6;
      }

      // Show the current day in a blue circle.
      &.active-day abbr {
        @apply bg-napari-primary rounded-full text-black;
      }
    }

    // Set tile background color based on row parity. Since `react-calendar`
    // doesn't use rows for rendering each week, we need to use the `nth-child`
    // selector to apply styles for the 7 days in a week.
    $offset: 0;
    @for $i from 0 through 8 {
      &:nth-child(n + #{$offset}) {
        @if $i % 2 == 0 {
          @apply bg-napari-hover-gray;
        } @else {
          @apply bg-white;
        }
      }

      // Add 1 initially to apply styling to the last day.
      @if $i == 0 {
        $offset: $offset + 1;
      }

      $offset: $offset + 7;
    }

    ul {
      @apply mt-2 mb-0;

      & > li {
        @apply m-0 p-0 overflow-ellipsis whitespace-nowrap;

        &::before {
          @apply hidden;
        }
      }
    }
  }

  &__month-view__weekdays {
    @apply border-b border-black;
  }

  &__month-view__weekdays__weekday {
    @apply flex justify-center;
    @apply font-bold uppercase;

    abbr[title] {
      @apply no-underline;
    }
  }
}
