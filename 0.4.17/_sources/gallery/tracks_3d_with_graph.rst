
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/tracks_3d_with_graph.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_tracks_3d_with_graph.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_tracks_3d_with_graph.py:


Tracks 3D with graph
====================

.. tags:: visualization-advanced

.. GENERATED FROM PYTHON SOURCE LINES 7-55



.. image-sg:: /gallery/images/sphx_glr_tracks_3d_with_graph_001.png
   :alt: tracks 3d with graph
   :srcset: /gallery/images/sphx_glr_tracks_3d_with_graph_001.png
   :class: sphx-glr-single-img





.. code-block:: default


    import napari
    import numpy as np


    def _circle(r, theta):
        x = r * np.cos(theta)
        y = r * np.sin(theta)
        return x, y


    def tracks_3d_merge_split():
        """Create tracks with splitting and merging."""

        timestamps = np.arange(300)

        def _trajectory(t, r, track_id):
            theta = t * 0.1
            x, y = _circle(r, theta)
            z = np.zeros(x.shape)
            tid = np.ones(x.shape) * track_id
            return np.stack([tid, t, z, y, x], axis=1)

        trackA = _trajectory(timestamps[:100], 30.0, 0)
        trackB = _trajectory(timestamps[100:200], 10.0, 1)
        trackC = _trajectory(timestamps[100:200], 50.0, 2)
        trackD = _trajectory(timestamps[200:], 30.0, 3)

        data = [trackA, trackB, trackC, trackD]
        tracks = np.concatenate(data, axis=0)
        tracks[:, 2:] += 50.0  # centre the track at (50, 50, 50)

        graph = {1: 0, 2: [0], 3: [1, 2]}

        features = {'time': tracks[:, 1]}

        return tracks, features, graph


    tracks, features, graph = tracks_3d_merge_split()
    vertices = tracks[:, 1:]

    viewer = napari.Viewer(ndisplay=3)
    viewer.add_points(vertices, size=1, name='points', opacity=0.3)
    viewer.add_tracks(tracks, features=features, graph=graph, name='tracks')

    if __name__ == '__main__':
        napari.run()


.. _sphx_glr_download_gallery_tracks_3d_with_graph.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tracks_3d_with_graph.py <tracks_3d_with_graph.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tracks_3d_with_graph.ipynb <tracks_3d_with_graph.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
