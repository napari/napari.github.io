
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/minimum_blending.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_minimum_blending.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_minimum_blending.py:


Minimum blending
================

Demonstrates how to use the `minimum` blending mode with inverted colormaps.
`minimum` blending uses the minimum value of each R, G, B channel for each pixel.
`minimum` blending can be used to yield multichannel color images on a white 
background, when the channels have inverted colormaps assigned.
An inverted colormap is one where white [1, 1, 1] is used to represent the lowest 
values, as opposed to the more conventional black [0, 0, 0]. For example, try the
colormaps prefixed with *I*, such as *I Forest* or *I Bordeaux*, from 
ChrisLUTs: https://github.com/cleterrier/ChrisLUTs .

.. GENERATED FROM PYTHON SOURCE LINES 14-34



.. image-sg:: /gallery/images/sphx_glr_minimum_blending_001.png
   :alt: minimum blending
   :srcset: /gallery/images/sphx_glr_minimum_blending_001.png
   :class: sphx-glr-single-img





.. code-block:: default


    from skimage import data
    import napari

    # create a viewer
    viewer = napari.Viewer()

    # Add the cells3d example image, using the two inverted colormaps
    # and minimum blending mode. Note that the bottom-most layer
    # must be translucent or opaque to prevent blending with the canvas.
    viewer.add_image(data.cells3d(),
                                name=["membrane", "nuclei"],
                                channel_axis=1,
                                contrast_limits = [[1110, 23855], [1600, 50000]],
                                colormap = ["I Purple", "I Orange"], 
                                blending= ["translucent_no_depth", "minimum"]
                                )

    if __name__ == '__main__':
        napari.run()


.. _sphx_glr_download_gallery_minimum_blending.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: minimum_blending.py <minimum_blending.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: minimum_blending.ipynb <minimum_blending.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
