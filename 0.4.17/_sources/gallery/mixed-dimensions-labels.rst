
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/mixed-dimensions-labels.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_mixed-dimensions-labels.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_mixed-dimensions-labels.py:


Mixed dimensions labels
=======================

Overlay a 3D segmentation on a 4D time series.

Sometimes, our data have mixed dimensionality. napari "right-aligns" the
dimensions of your data, following NumPy broadcasting conventions [1]_. In this
example, we show how we can see a 3D segmentation overlaid on a 4D dataset. As
we slice through the dataset, the segmentation stays unchanged, but is visible
on every slice.

.. [1] https://numpy.org/doc/stable/user/basics.broadcasting.html

.. tags:: visualization-nD

.. GENERATED FROM PYTHON SOURCE LINES 17-37



.. image-sg:: /gallery/images/sphx_glr_mixed-dimensions-labels_001.png
   :alt: mixed dimensions labels
   :srcset: /gallery/images/sphx_glr_mixed-dimensions-labels_001.png
   :class: sphx-glr-single-img





.. code-block:: default


    from skimage.data import binary_blobs
    from scipy import ndimage as ndi
    import numpy as np
    import napari

    blobs3d = binary_blobs(length=64, volume_fraction=0.1, n_dim=3).astype(float)

    blobs3dt = np.stack([np.roll(blobs3d, 3 * i, axis=2) for i in range(10)])

    labels = ndi.label(blobs3dt[5])[0]

    viewer = napari.Viewer(ndisplay=3)

    image_layer = viewer.add_image(blobs3dt)
    labels_layer = viewer.add_labels(labels)
    viewer.dims.current_step = (5, 0, 0, 0)

    if __name__ == '__main__':
        napari.run()


.. _sphx_glr_download_gallery_mixed-dimensions-labels.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: mixed-dimensions-labels.py <mixed-dimensions-labels.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: mixed-dimensions-labels.ipynb <mixed-dimensions-labels.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
