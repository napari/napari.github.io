
.. DO NOT EDIT.
.. THIS FILE WAS AUTOMATICALLY GENERATED BY SPHINX-GALLERY.
.. TO MAKE CHANGES, EDIT THE SOURCE PYTHON FILE:
.. "gallery/tracks_2d.py"
.. LINE NUMBERS ARE GIVEN BELOW.

.. only:: html

    .. note::
        :class: sphx-glr-download-link-note

        Click :ref:`here <sphx_glr_download_gallery_tracks_2d.py>`
        to download the full example code

.. rst-class:: sphx-glr-example-title

.. _sphx_glr_gallery_tracks_2d.py:


Tracks 2D
=========

.. tags:: visualization-basic

.. GENERATED FROM PYTHON SOURCE LINES 7-65



.. image-sg:: /gallery/images/sphx_glr_tracks_2d_001.png
   :alt: tracks 2d
   :srcset: /gallery/images/sphx_glr_tracks_2d_001.png
   :class: sphx-glr-single-img





.. code-block:: default


    import napari
    import numpy as np


    def _circle(r, theta):
        x = r * np.cos(theta)
        y = r * np.sin(theta)
        return x, y


    def tracks_2d(num_tracks=10):
        """ create 2d+t track data """
        tracks = []

        for track_id in range(num_tracks):

            # space to store the track data and features
            track = np.zeros((100, 6), dtype=np.float32)

            # time
            timestamps = np.arange(track.shape[0])

            radius = 20 + 30 * np.random.random()
            theta = timestamps * 0.1 + np.random.random() * np.pi
            x, y = _circle(radius, theta)

            track[:, 0] = track_id
            track[:, 1] = timestamps
            track[:, 2] = 50.0 + y
            track[:, 3] = 50.0 + x
            track[:, 4] = theta
            track[:, 5] = radius

            tracks.append(track)

        tracks = np.concatenate(tracks, axis=0)
        data = tracks[:, :4]  # just the coordinate data

        features = {
            'time': tracks[:, 1],
            'theta': tracks[:, 4],
            'radius': tracks[:, 5],
        }

        graph = {}
        return data, features, graph


    tracks, features, graph = tracks_2d(num_tracks=10)
    vertices = tracks[:, 1:]

    viewer = napari.Viewer()
    viewer.add_points(vertices, size=1, name='points', opacity=0.3)
    viewer.add_tracks(tracks, features=features, name='tracks')

    if __name__ == '__main__':
        napari.run()


.. _sphx_glr_download_gallery_tracks_2d.py:

.. only:: html

  .. container:: sphx-glr-footer sphx-glr-footer-example


    .. container:: sphx-glr-download sphx-glr-download-python

      :download:`Download Python source code: tracks_2d.py <tracks_2d.py>`

    .. container:: sphx-glr-download sphx-glr-download-jupyter

      :download:`Download Jupyter notebook: tracks_2d.ipynb <tracks_2d.ipynb>`


.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
